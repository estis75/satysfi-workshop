{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "SATySFi Header",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#type"
		},
		{
			"include": "#module"
		},
		{
			"include": "#propaty"
		},
		{
			"include": "#inline"
		},
		{
			"include": "#block"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#meta"
		},
		{
			"include": "#operator"
		},
		{
			"include": "math"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.satysfi",
				"match": "(?<![\\-\\w])(let(\\-[A-Za-z]+)?|module|end|val|direct|type|in|match|with|fun|of)(?![\\-\\w])"
			}]
		},
		"type": {
			"patterns": [
				{
					"name": "entity.name.type.satysfi",
					"match": "(?<![\\-\\w])(unit|int|bool|float|length|string|inline-text|inline-boxes|block-text|block-boxes|paddings|deco|deco-set|context|graphics|document|script|image|point|pre-path|path|color|font|language|math-class|math-kern-func|math-char-style|paren|math-char-class|Option|Some|None|Object|type-syntax|list|true|false)(?![\\-\\w])"
				}
			]
		},
		"module": {
			"patterns": [{
				"name": "entity.name.class.satysfi",
				"match": "[A-Z][a-zA-Z0-9\\-]*(?=\\.[a-z][a-zA-Z0-9\\-]*\\W)"
			}]
		},
		"propaty": {
			"patterns": [
				{
					"name": "support.type.property-name",
					"match": "(?=\\W[A-Z][a-zA-Z0-9]\\.)[a-z][a-zA-Z0-9\\-]*\\W"
				}
			]
		},
		"inline": {
			"patterns": [{
				"name": "entity.name.function.satysfi",
				"match": "\\\\\\w+\\-?\\w*(?=\\W)"
			}]
		},
		"block": {
			"patterns": [{
				"name": "entity.name.class.satysfi",
				"match": "\\+\\w+\\-?\\w*(?=\\W)"
			}]
		},
		"meta": {
			"patterns": [{
				"name": "meta.preprocessor.satysfi",
				"match": "\\@\\b(require|import)\\b"
			}]
		},
		"comments": {
			"patterns": [{
				"name": "comment.line.percentage.satysfi",
				"match": "%.*"
			}]
		},
		"operator": {
			"patterns": [{
				"name": "keyword.operator.satysfi",
				"match": "\\b(\\+\\+)\\b",
				"description": "it doesn't go well......"
			}]
		},
		"math": {
			"patterns": [
				{
					"name": "entity.other.satysfi",
					"match": "(?<=\\W)$(?=\\{[.\\s]*\\})",
					"description": "it doesn't go well......"
				}
			]
		}
	},
	"scopeName": "text.satyh"
}